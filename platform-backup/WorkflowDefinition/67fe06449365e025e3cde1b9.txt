{
	"appsUsed":[
		"freshdesk"
	],
	"createdTime":1747126021633,
	"deleted":false,
	"deploymentState":{
		"deployedAt":1747126021866,
		"deployedBy":1,
		"deployedDefinitionId":"68230705ad1d4f40bd1c2131",
		"status":"DEPLOYED",
		"version":1,
		"workflowVersion":107
	},
	"edges":[
		{
			"fromNodeId":"TXUwz",
			"priority":0,
			"skip":false,
			"toNodeId":"qiJy0",
			"type":"next"
		},
		{
			"fromNodeId":"qiJy0",
			"priority":0,
			"skip":false,
			"toNodeId":"ZBSDO",
			"type":"next"
		},
		{
			"fromNodeId":"ZBSDO",
			"priority":0,
			"skip":false,
			"toNodeId":"dff9J",
			"type":"next"
		},
		{
			"fromNodeId":"dff9J",
			"priority":0,
			"skip":false,
			"toNodeId":"Wa9Xy",
			"type":"next"
		},
		{
			"fromNodeId":"Wa9Xy",
			"priority":0,
			"skip":false,
			"toNodeId":"p2UDz",
			"type":"loop"
		},
		{
			"fromNodeId":"p2UDz",
			"priority":0,
			"skip":false,
			"toNodeId":"uJVzu",
			"type":"next"
		},
		{
			"fromNodeId":"uJVzu",
			"priority":0,
			"skip":false,
			"toNodeId":"ksfMn",
			"type":"next"
		},
		{
			"fromNodeId":"ksfMn",
			"priority":0,
			"skip":false,
			"toNodeId":"6u60z",
			"type":"next"
		},
		{
			"fromNodeId":"6u60z",
			"priority":0,
			"skip":false,
			"toNodeId":"fot1i",
			"type":"next"
		},
		{
			"fromNodeId":"fot1i",
			"priority":0,
			"skip":false,
			"toNodeId":"rqBCF",
			"type":"next"
		},
		{
			"fromNodeId":"rqBCF",
			"priority":0,
			"skip":false,
			"toNodeId":"OPOvh",
			"type":"next"
		},
		{
			"fromNodeId":"OPOvh",
			"name":"loopback",
			"priority":0,
			"skip":false,
			"toNodeId":"Wa9Xy",
			"type":"next"
		},
		{
			"fromNodeId":"Wa9Xy",
			"priority":0,
			"skip":false,
			"toNodeId":"i9Lsm",
			"type":"next"
		}
	],
	"id":"67fe06449365e025e3cde1b9",
	"lastModifiedBy":1,
	"lcName":"knowledge indexer | freshdesk | index all tickets",
	"modifiedTime":1747126021867,
	"name":"Knowledge Indexer | Freshdesk | Index all tickets",
	"nodes":[
		{
			"context":{
				"appName":"callables",
				"resourceVersion":478,
				"resourceName":"callables_from_interface"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"iyWXA-1",
			"id":"TXUwz",
			"index":0,
			"inputs":{
				"result":{
					"additionalProperties":false,
					"ua:modal":{
						"field_type":"STRING",
						"is_optional":true
					},
					"type":"object",
					"properties":{
						"cursorObject":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"cursorObject"
						},
						"success":{
							"type":"boolean",
							"title":"Success"
						},
						"lastSyncTime":{
							"type":"string",
							"title":"Last Sync Time"
						}
					},
					"required":[]
				},
				"callableInterfaceId":"674855d2634d220ea5dd2d71",
				"setup":{
					"additionalProperties":false,
					"ua:modal":{
						"field_type":"STRING",
						"is_optional":true
					},
					"type":"object",
					"properties":{
						"knowledgeId":{
							"type":"string",
							"title":"knowledgeId"
						},
						"aiAgentId":{
							"type":"string",
							"title":"aiAgentId"
						},
						"knowledge":{
							"type":"object",
							"properties":{
								"readVersion":{
									"type":"integer",
									"title":"readVersion"
								},
								"lastSyncTime":{
									"type":"integer",
									"title":"lastSyncTime"
								},
								"cursorObject":{
									"type":"object",
									"title":"cursorObject"
								},
								"applicationInfo":{
									"type":"object",
									"properties":{
										"context":{
											"type":"object",
											"properties":{
												"connectionId":{
													"type":"string",
													"title":"Connection Id"
												}
											},
											"additionalProperties":false,
											"title":"Context",
											"required":[]
										}
									},
									"additionalProperties":false,
									"title":"Application Info",
									"required":[]
								}
							},
							"title":"knowledge",
							"additionalProperties":false,
							"required":[]
						},
						"inputs":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Inputs"
						}
					},
					"required":[]
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Trigger interface",
			"trigger":{
				"type":"CALLABLE"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"standard_entities",
				"resourceVersion":471,
				"resourceName":"standard_entities_get_connection_details",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"iyWXA-1",
			"id":"qiJy0",
			"index":0,
			"inputs":{
				"connectionIds":"{{ TXUwz.outputs.knowledge.applicationInfo.context.connectionId }}"
			},
			"skip":false,
			"subTitle":"Standard entities by UnifyApps",
			"title":"Get connection details",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":510,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"iyWXA-1",
			"id":"ZBSDO",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"mappedInputs":{
							"type":"object",
							"properties":{
								"priority":{
									"type":"integer",
									"title":"Priority"
								},
								"status":{
									"type":"integer",
									"title":"Status"
								},
								"createdFromDate":{
									"type":"string",
									"title":"Created From Date"
								},
								"createdToDate":{
									"type":"string",
									"title":"Created To Date"
								},
								"modifiedFromDate":{
									"type":"string",
									"title":"Modified From Date"
								},
								"modifiedToDate":{
									"type":"string",
									"title":"Modified To Date"
								},
								"dueFromDate":{
									"type":"string",
									"title":"Due From Date"
								},
								"dueToDate":{
									"type":"string",
									"title":"Due To Date"
								}
							},
							"additionalProperties":false,
							"title":"Mapped Inputs",
							"required":[
								"priority",
								"status",
								"createdFromDate",
								"createdToDate",
								"modifiedFromDate",
								"modifiedToDate",
								"dueFromDate",
								"dueToDate"
							]
						}
					},
					"additionalProperties":false,
					"required":[
						"mappedInputs"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"inputs":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Inputs"
						}
					},
					"additionalProperties":false,
					"required":[
						"inputs"
					]
				},
				"compile_static":false,
				"code":"def mappedInputs = [:]\ndef toReturn = [:]\n\nif (binding.hasVariable('inputs')) {\n    if (inputs?.priority) {\n        mappedInputs[\"priority\"] = inputs.priority\n    }\n    if (inputs?.status) {\n        mappedInputs[\"status\"] = inputs.status\n    }\n    mappedInputs[\"createdFromDate\"] = inputs?.createdDateRange?.fromDate\n    mappedInputs[\"createdToDate\"] = inputs?.createdDateRange?.toDate\n    mappedInputs[\"modifiedFromDate\"] = inputs?.modifiedDateRange?.fromDate\n    mappedInputs[\"modifiedToDate\"] = inputs?.modifiedDateRange?.toDate\n\n    mappedInputs[\"dueFromDate\"] = inputs?.dueFromDate?.fromDate\n    mappedInputs[\"dueToDate\"] = inputs?.dueToDate?.toDate\n}\n\nreturn [\"mappedInputs\": mappedInputs]\n",
				"parameters":{
					"inputs":"{{ TXUwz.outputs.inputs }}"
				}
			},
			"skip":false,
			"subTitle":"User Inputs",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"freshdesk",
				"resourceVersion":4256,
				"connectionId":"68106f9cb5fb8f78d2e289a7",
				"resourceName":"freshdesk_list_tickets",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"iyWXA-1",
			"id":"dff9J",
			"index":0,
			"inputs":{},
			"skip":false,
			"subTitle":"Freshdesk",
			"title":"List tickets",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"loop",
				"resourceVersion":536,
				"resourceName":"loop_for_each",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"iyWXA-1",
			"id":"Wa9Xy",
			"index":0,
			"inputs":{
				"repeatMode":"SINGLE",
				"listSource":"{{ dff9J.outputs.data }}",
				"captureIterations":false
			},
			"skip":false,
			"subTitle":"Loop",
			"title":"For loop",
			"type":"LOOP"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":510,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Wa9Xy@iyWXA-1@l",
			"id":"p2UDz",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"createdIsBetween":{
							"type":"boolean",
							"title":"Created Is Between"
						},
						"modifiedIsBetween":{
							"type":"boolean",
							"title":"Modified Is Between"
						},
						"dueIsBetween":{
							"type":"boolean",
							"title":"Due Is Between"
						},
						"createdFromDate":{
							"type":"string",
							"title":"Created From Date"
						},
						"createdToDate":{
							"type":"string",
							"title":"Created To Date"
						},
						"allowed":{
							"type":"boolean",
							"title":"Allowed"
						}
					},
					"additionalProperties":false,
					"required":[
						"createdIsBetween",
						"modifiedIsBetween",
						"dueIsBetween",
						"createdFromDate",
						"createdToDate",
						"allowed"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"mappedInputs":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Mapped Inputs"
						},
						"item":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Item"
						},
						"lastSyncTime":{
							"type":"integer",
							"title":"Last Sync Time"
						}
					},
					"additionalProperties":false,
					"required":[
						"mappedInputs",
						"item",
						"lastSyncTime"
					]
				},
				"compile_static":false,
				"code":"import java.time.LocalDate\nimport java.time.ZonedDateTime\nimport java.time.format.DateTimeFormatter\nimport java.time.ZoneId\nimport java.time.Instant\n\ndef createdDate = item.created_at\ndef modifiedDate = item.updated_at\ndef dueDate = item.due_by\ndef lastModified = item.updated_at\n\n// Formatter for input date strings\nDateTimeFormatter userFormatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")\n\n// Parse input filters directly\nLocalDate createdFromDate = mappedInputs?.createdFromDate ? LocalDate.parse(mappedInputs.createdFromDate, userFormatter) : null\nLocalDate createdToDate   = mappedInputs?.createdToDate   ? LocalDate.parse(mappedInputs.createdToDate, userFormatter)   : null\n\nLocalDate modifiedFromDate = mappedInputs?.modifiedFromDate ? LocalDate.parse(mappedInputs.modifiedFromDate, userFormatter) : null\nLocalDate modifiedToDate   = mappedInputs?.modifiedToDate   ? LocalDate.parse(mappedInputs.modifiedToDate, userFormatter)   : null\n\nLocalDate dueFromDate = mappedInputs?.dueFromDate ? LocalDate.parse(mappedInputs.dueFromDate, userFormatter) : null\nLocalDate dueToDate   = mappedInputs?.dueToDate   ? LocalDate.parse(mappedInputs.dueToDate, userFormatter)   : null\n\n// created date check\nboolean createdIsBetween = true\ndef createdAtDate\nif (createdDate) {\n    createdAtDate = ZonedDateTime.parse(createdDate).toLocalDate()\n    if ((createdFromDate && createdAtDate.isBefore(createdFromDate)) ||\n        (createdToDate && createdAtDate.isAfter(createdToDate))) {\n        createdIsBetween = false\n    }\n}\n\n// modified date check\nboolean modifiedIsBetween = true\nif (modifiedDate) {\n    LocalDate modifiedAtDate = ZonedDateTime.parse(modifiedDate).toLocalDate()\n    if ((modifiedFromDate && modifiedAtDate.isBefore(modifiedFromDate)) ||\n        (modifiedToDate && modifiedAtDate.isAfter(modifiedToDate))) {\n        modifiedIsBetween = false\n    }\n}\n\n// due date check\nboolean dueIsBetween = true\nif (dueDate) {\n    LocalDate dueAtDate = ZonedDateTime.parse(dueDate).toLocalDate()\n    if ((dueFromDate && dueAtDate.isBefore(dueFromDate)) ||\n        (dueToDate && dueAtDate.isAfter(dueToDate))) {\n        dueIsBetween = false\n    }\n}\n\nboolean allowed = true\ndef instant = Instant.parse(lastModified)\ndef epochMillis = instant.toEpochMilli()\n\nif (binding.hasVariable('lastSyncTime')) {\n    if(epochMillis < lastSyncTime) {\n       allowed = false\n    }\n}\n\n\nreturn [\n    \"createdIsBetween\" : createdIsBetween,\n    \"modifiedIsBetween\": modifiedIsBetween,\n    \"dueIsBetween\"     : dueIsBetween,\n    \"createdDate\"      : createdDate,\n    \"createdFromDate\"  : createdFromDate,\n    \"createdToDate\"    : createdToDate,\n    \"createdAtDate\"    : createdAtDate,\n    \"epochMillis\"      : epochMillis,\n    \"allowed\"          : allowed\n]\n",
				"parameters":{
					"mappedInputs":"{{ ZBSDO.outputs.result.mappedInputs }}",
					"item":"{{ Wa9Xy.outputs.item }}",
					"lastSyncTime":"{{ TXUwz.outputs.knowledge.lastSyncTime }}"
				}
			},
			"skip":false,
			"subTitle":"Filters check",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"continue",
				"resourceVersion":468,
				"resourceName":"continue",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Wa9Xy@iyWXA-1@l",
			"id":"uJVzu",
			"index":0,
			"inputs":{
				"loop":"Wa9Xy",
				"conditions":{
					"filters":[
						{
							"property":"{{ p2UDz.outputs.result.createdIsBetween }}",
							"filter":{
								"operator":"EQUAL",
								"value":"false"
							}
						},
						{
							"property":"{{ p2UDz.outputs.result.modifiedIsBetween }}",
							"filter":{
								"operator":"EQUAL",
								"value":"false"
							}
						},
						{
							"property":"{{ p2UDz.outputs.result.dueIsBetween }}",
							"filter":{
								"operator":"EQUAL",
								"value":"false"
							}
						},
						{
							"property":"{{ p2UDz.outputs.result.allowed }}",
							"filter":{
								"operator":"EQUAL",
								"value":"false"
							}
						}
					],
					"operator":"OR"
				}
			},
			"skip":false,
			"subTitle":"Continue",
			"title":"Continue",
			"type":"CONTINUE"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":550,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Wa9Xy@iyWXA-1@l",
			"id":"ksfMn",
			"index":0,
			"inputs":{
				"automationId":"6801c9cefc800d7f23509195",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1"
			},
			"skip":false,
			"subTitle":"Get users",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":510,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Wa9Xy@iyWXA-1@l",
			"id":"6u60z",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"dataToIndex":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Data To Index"
						},
						"chunkMetadata":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Chunk Metadata"
						},
						"id":{
							"type":"string",
							"title":"Id"
						},
						"sharedWithIds":{
							"type":"array",
							"items":{
								"type":"string"
							},
							"title":"Shared With Ids"
						}
					},
					"additionalProperties":false,
					"required":[
						"dataToIndex",
						"chunkMetadata",
						"id",
						"sharedWithIds"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"item":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Item"
						}
					},
					"additionalProperties":false,
					"required":[
						"item"
					]
				},
				"compile_static":false,
				"code":"def dataToIndex = [:]\ndef chunkMetadata = [:]\ndef id = item.id.toString()\ndef sharedWithIds = [\"freshdesk/g/-1\"]\n\ndataToIndex << [\"priority\": item.priority]\ndataToIndex << [\"requester_id\": item.requester_id]\ndataToIndex << [\"source\": item.source]\ndataToIndex << [\"company_id\": item.company_id]\ndataToIndex << [\"status\": item.status]\ndataToIndex << [\"subject\": item.subject]\ndataToIndex << [\"product_id\": item.product_id]\ndataToIndex << [\"id\": item.id]\ndataToIndex << [\"type\": item.type]\ndataToIndex << [\"due_by\": item.due_by]\ndataToIndex << [\"created_at\": item.created_at]\ndataToIndex << [\"updated_at\": item.updated_at]\n\nchunkMetadata << [\"due_by\": item.due_by]\nchunkMetadata << [\"created_at\": item.created_at]\nchunkMetadata << [\"updated_at\": item.updated_at]\nchunkMetadata << [\"appName\": \"freshdesk\"]\n\n\nreturn [\"dataToIndex\": dataToIndex, \"chunkMetadata\": chunkMetadata, \"id\": id, \"sharedWithIds\": sharedWithIds]\n",
				"parameters":{
					"item":"{{ Wa9Xy.outputs.item }}"
				}
			},
			"skip":false,
			"subTitle":"Data to index",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":512,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Wa9Xy@iyWXA-1@l",
			"id":"fot1i",
			"index":0,
			"inputs":{
				"output":{
					"type":"object",
					"properties":{
						"data":{
							"type":"string",
							"title":"Data"
						}
					},
					"additionalProperties":false,
					"required":[
						"data"
					]
				},
				"input":{
					"type":"object",
					"properties":{
						"dataToIndex":{
							"type":"object",
							"properties":{},
							"additionalProperties":false,
							"title":"Data To Index"
						}
					},
					"additionalProperties":false,
					"required":[
						"dataToIndex"
					]
				},
				"compile_static":false,
				"code":"def convertToString(data, indent = \"\") {\n    if (data instanceof Map) {\n        if (data.isEmpty()) return \"not given\"\n        return data.findAll { key, value -> value != null && value.toString().trim() != \"\" }\n                   .collect { key, value -> \"${indent}${key} is ${convertToString(value, indent + \"  \")}\" }\n                   .join(\", \")\n    } else if (data instanceof List) {\n        if (data.isEmpty()) return \"not given\"\n        return data.collect { item -> convertToString(item, indent + \"  \") }\n                   .join(\", \")\n    } else {\n        return data?.toString() ?: \"not given\"\n    }\n}\n\ndef data = binding.hasVariable(\"dataToIndex\") && dataToIndex?convertToString(dataToIndex):null\n\nreturn data",
				"parameters":{
					"dataToIndex":"{{ 6u60z.outputs.result.dataToIndex }}"
				}
			},
			"skip":false,
			"subTitle":"Stringify",
			"title":"Execute Groovy code",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":522,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Wa9Xy@iyWXA-1@l",
			"id":"rqBCF",
			"index":0,
			"inputs":{
				"automationId":"67091f09c6db330cf5b08ead",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"text":"{{ fot1i.outputs.result }}",
					"knowledgeId":"{{ TXUwz.outputs.knowledgeId }}"
				}
			},
			"skip":false,
			"subTitle":"Text chunker",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":522,
				"resourceName":"callables_call_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"Wa9Xy@iyWXA-1@l",
			"id":"OPOvh",
			"index":0,
			"inputs":{
				"automationId":"66af3ff4cd79b321cb478a37",
				"runtimeConnections":{},
				"synchronous":true,
				"version":"-1",
				"parameters":{
					"chunks":{
						"source":"{{ rqBCF.outputs.chunks }}",
						"ua:type":"mappedArray",
						"items":{
							"data":"{{ rqBCF.outputs.chunks[0] }}",
							"chunkMetadata":"{{ 6u60z.outputs.result.chunkMetadata }}",
							"sharedWithIds":{
								"ua:type":"mappedArray",
								"source":"{{ ksfMn.outputs.sharedWithIds }}",
								"items":"{{ ksfMn.outputs.sharedWithIds[0] }}"
							}
						}
					},
					"knowledgeId":"{{ TXUwz.outputs.knowledgeId }}",
					"chunkMetadata":"{{ 6u60z.outputs.result.chunkMetadata }}",
					"knowledgeVersion":"{{ TXUwz.outputs.knowledge.readVersion }}",
					"uniqueEntityId":"{{ 6u60z.outputs.result.id }}"
				}
			},
			"skip":false,
			"subTitle":"RBAC Knowledge Indexer",
			"title":"Call automation",
			"type":"CALL_WORKFLOW"
		},
		{
			"context":{
				"appName":"callables",
				"resourceVersion":502,
				"resourceName":"callables_return_to_automation",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":false,
			"fallbackMode":"STOP",
			"groupId":"iyWXA-1",
			"id":"i9Lsm",
			"index":0,
			"inputs":{
				"result":{
					"success":true
				}
			},
			"skip":false,
			"subTitle":"Callable",
			"title":"Respond to automation",
			"type":"STOP"
		}
	],
	"ownerUserId":1,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true
	},
	"standard":false,
	"tags":[
		
	],
	"version":107
}